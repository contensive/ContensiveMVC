<html>
<head>
<LINK href="https://s3.amazonaws.com/cdn.contensive.com/assets/20190729/Config/styles.css" type=text/css rel=stylesheet>
<script type="text/javascript" src="https://s3.amazonaws.com/cdn.contensive.com/assets/20190729/ClientSide/core.js"></script>
<script language="JavaScript">

var callerArgObj = dialogArguments;
var callerWindowObj = callerArgObj.win;
var callerFieldName = callerArgObj.fieldName;

function getInfoAndUpdate(){

	updateTableCell();
	updateTable();
	callerWindowObj.SaveFieldPlus(callerFieldName);
}

function updateTableCell() {

	if (isNaN(formCellWidth.value)){
		alert ("The width field can only contain numbers");
		return;
	}
	else if (isNaN(formCellHeight.value)){
		alert ("The height field can only contain numbers");
		return;
	}

	if (formCellWidth.value != "") {
		if (formCellWidthDesc.value == "%") {
			callerWindowObj.TableCellPropertyObject.setAttribute("width", formCellWidth.value + "%");
		}
		else {
			callerWindowObj.TableCellPropertyObject.setAttribute("width", formCellWidth.value);
		}
		
		callerWindowObj.TableCellPropertyObject.style.width = formCellWidth.value + formCellWidthDesc.value;
	}

	if (formCellHeight.value != "") {
		if (formCellHeightDesc.value == "%") {
			callerWindowObj.TableCellPropertyObject.setAttribute("height", formCellHeight.value + "%");
		}
		else {
			callerWindowObj.TableCellPropertyObject.setAttribute("height", formCellHeight.value);
		}
		callerWindowObj.TableCellPropertyObject.style.height = formCellHeight.value + formCellHeightDesc.value;
	}
	
	callerWindowObj.TableCellPropertyObject.setAttribute("valign", formCellVertAlign.value + "", 0);
	callerWindowObj.TableCellPropertyObject.style.textAlign = formCellAlign.value;
	callerWindowObj.TableCellPropertyObject.style.backgroundColor = formBGColor.value;

}

function updateTable() {
	if (isNaN(formNumRows.value)){
		alert ("The rows field can only contain numbers");
		return;
	}
	else if (isNaN(formNumCols.value)){
		alert ("The columns field can only contain numbers");
		return;
	}
	else if (isNaN(formTblWidth.value)) {
		alert ("The width field can only contain numbers");
		return;
	}

	if (formNumCols.value > numCols) {
		var i, j;
		var tRows = callerWindowObj.TableBodyPropertyObject.getElementsByTagName("TR");
		for (j=0; j < (formNumCols.value - numCols); j++) {
			for (i = 0; i < tRows.length; i++) {
				var newTD = tRows[i].insertCell();
				newTD.style.width = Math.round(50/tRows[i].childNodes.length) + "%";
				newTD.insertAdjacentText("afterBegin", " ");
			}
		}
		numCols = formNumCols.value
	}
	else if (formNumCols.value < numCols) {
		alert("Please use the active editor instead and right click the column you wish to delete.");
		formNumCols.value = numCols;
		return false;
	}

	if (formNumRows.value > numRows) {
		var i, j;
		for (i=0; i < (formNumRows.value - numRows); i++) {
			var Row = callerWindowObj.TablePropertyObject.insertRow();
			callerWindowObj.TableBodyPropertyObject.appendChild(Row);
			for (j = 0; j < numCols; j++) {
				var nc = Row.insertCell();
				nc.insertAdjacentText("afterBegin", " ");
			}
		}
		numRows = formNumRows.value;
	}
	else if (formNumRows.value < numRows) {
		alert("Please use the active editor instead and right click the row you wish to delete.");
		formNumRows.value = numRows;
		return false;
	}
	
	callerWindowObj.TablePropertyObject.setAttribute("align", formTblAlign.value, 0);
	callerWindowObj.TablePropertyObject.setAttribute("cellspacing", formTblCellspacing.value, 0);
	callerWindowObj.TablePropertyObject.setAttribute("cellpadding", formTblCellpadding.value, 0);

	if (formTblWidthDesc.value == "%") {
		callerWindowObj.TablePropertyObject.setAttribute("width", formTblWidth.value + "%");
	}
	else {
		callerWindowObj.TablePropertyObject.setAttribute("width", formTblWidth.value);
	}
	
	callerWindowObj.TablePropertyObject.style.width = formTblWidth.value + formTblWidthDesc.value;

	if (!isNaN(formTblBorder.value)){
		callerWindowObj.TablePropertyObject.setAttribute("Border", formTblBorder.value, 0);
	}

	callerWindowObj.TablePropertyObject.setAttribute("frame", formTblFrame.value, 0);
	callerWindowObj.TablePropertyObject.setAttribute("rules", formTblRules.value, 0);
	callerWindowObj.TablePropertyObject.style.backgroundColor = formTblBGColor.value;
}

function closeFunction() {
	window.close();
}
</script>
<title>Table Properties</title>
</head>
<style>

.ccTab { color: #000000; 
	width: 80px; 
	height: 25px; 
	text-decoration: none; 
	text-align: center; 
	font-weight: bold;
	padding-top: 3px;
	border-top: 1px solid #E5E2E2; 
	border-right: 1px solid #9C9A9A; 
	border-left: 1px solid #E5E2E2;}
.ccTabHidden { 
	font-weight: normal;
	padding-top: 3px;
	height: 23px;
	border-top: 1px solid #E5E2E2; 
	border-right: 1px solid #9C9A9A; 
	border-left: 1px solid #E5E2E2;
	border-bottom: 1px solid #E5E2E2; 
	color: #000000;}
.ccTabSpacer { 
	width: 5px; 
	height: 25px; 
	padding-top: 5px; 
	border-bottom: 1px solid #E5E2E2;}
.ccTabFiller { 
	width: 140px; 
	height: 25px; 
	padding-top: 5px; 
	border-bottom: 1px solid #E5E2E2;}

</style>
<body onLoad="loadValues();" class="ccPanel" topmargin="0" leftmargin="0" marginwidth="0" marginheight="0">
<TABLE border="0" cellpadding="0" cellspacing="0" width="300" class="ccPanelshadow">
<TR id="topspace"><TD><img src="https://s3.amazonaws.com/cdn.contensive.com/assets/20190729/images/spacer.gif" height="5" width="100%"></TD></TR>
<TR id="tabRow"><TD><nobr><span class="ccTabSpacer">&nbsp;</span><a class="ccPanel ccTab" href="" name="tabLink" onClick="showTab('td_div', this, -1); return false;">Cell</a><span class="ccTabSpacer">&nbsp;</span><a class="ccPanel ccTab ccTabHidden" href="" name="tabLink" onClick="showTab('table_div', this, -1); return false;">Table</a><span class="ccTabFiller">&nbsp;</span></nobr></TD></TR>
<TR><TD>

<TABLE id="wholeTable" border="0" cellpadding="0" cellspacing="0" width="100%" class="ccPanel">
<TR>
<TD width="100%" valign="top" align="left">

<!-- Cell Properties -->

<div id="td_div" style="height: 300px; border-right: 1px solid #000000; border-left: 1px solid #000000;border-bottom: 1px solid #000000;">
<TABLE border="0" cellpadding="2" cellspacing="0" width="300" class="ccPanel">
<tr>
<td width="109"><img src="https://s3.amazonaws.com/cdn.contensive.com/assets/20190729/images/spacer.gif" width="109" height="1"></td>
<td width="191"><img src="https://s3.amazonaws.com/cdn.contensive.com/assets/20190729/images/spacer.gif" width="191" height="1"></td>
</tr>
<tr>
<td class="ccAdminNormal" align="right">Height: </td>
<td align="left"><input style="width: 75px; height: 22px;" id='formCellHeight' size='6' value=''>
<select style="width: 60px; height: 22px;" id='formCellHeightDesc' size='1'><option value="px">pixels</option><option value="%">%</option></select>
</td></tr>
<tr>
<td class="ccAdminNormal" align="right">Width:</td>
<td align="left"><input style="width: 75px; height: 22px;" id='formCellWidth' size='6' value=''>
<select style="width: 60px; height: 22px;" id='formCellWidthDesc' size='1'><option value="px">pixels</option><option value="%">%</option></select></td></tr>
<tr>
<td class="ccAdminNormal" align="right">Cell Alignment:</td>
<td align="left"><select style="width: 75px; height: 22px;" id='formCellAlign' size='1'>
        <option value='left' selected>Left</option>
        <option value='center'>Center</option>
        <option value='right'>Right</option>
      </select>
</td></tr>
<tr>
<td class="ccAdminNormal" align="right">Cell Alignment:</td>
<td align="left"><select style="width: 75px; height: 22px;" id='formCellVertAlign' size='1'>
        <option value='top'>Top</option>
        <option value='middle' selected>Middle</option>
        <option value='bottom'>Bottom</option>
      </select>
</td></tr>
<tr>
<td class="ccAdminNormal" align="right">Background Color:</td>
<td align="left"><input style="width: 75px; height: 22px;" id='formBGColor' size='6' value=''></td></tr>
</TABLE>
</div>

<!-- Table Properties -->

<div id="table_div" style="visibility:hidden; height: 300px; position: absolute; left: 0px; top: 0px; border-right: 1px solid #000000; border-left: 1px solid #000000;border-bottom: 1px solid #000000;">
<TABLE border="0" cellpadding="2" cellspacing="0" width="300" class="ccPanel">
<tr>
<td width="120"><img src="https://s3.amazonaws.com/cdn.contensive.com/assets/20190729/images/spacer.gif" width="120" height="1"></td>
<td width="180"><img src="https://s3.amazonaws.com/cdn.contensive.com/assets/20190729/images/spacer.gif" width="180" height="1"></td>
</tr>
<tr><td class="ccAdminNormal" align="right">Number of Rows:</td><td align="left">
      <input style="width: 75px; height: 22px;" id='formNumRows' size='2' value='1'>
              </td></tr>
<tr><td class="ccAdminNormal" align="right">Number of Columns:</td>
<td align="left"><input style="width: 75px; height: 22px;" id='formNumCols' size='2' value='1'>
  </td></tr>
<tr><td class="ccAdminNormal" align="right">Table Alignment:</td><td align="left"><select style="width: 75px; height: 22px;" id='formTblAlign' size='1'>
        <option value=''>Default</option>
        <option value='left'>Left</option>
        <option value='center' selected>Center</option>
        <option value='right'>Right</option>
      </select>
              </td></tr>
<tr><td class="ccAdminNormal" align="right">Table Width:</td><td align="left"><input type="text" name="formTblWidth" style="width: 75px; height: 22px;">
<select style="width: 60px; height: 22px;" id='formTblWidthDesc' size='1'><option value="px">pixels</option><option value="%">%</option></select>
</td></tr>
<tr>
<td class="ccAdminNormal" align="right">Border:</td><td align="left"><input type="text" name="formTblBorder" style="width: 75px; height: 22px;">
</td>
</tr>
<tr>
<td class="ccAdminNormal" align="right">Background:</td><td align="left"><input type="text" name="formTblBGColor" style="width: 75px; height: 22px;">
</td>
</tr>
<tr>
<td class="ccAdminNormal" align="right">Cell Padding:</td><td align="left"><input type="text" name="formTblCellpadding" style="width: 75px; height: 22px;">
</td>
</tr>
<tr>
<td class="ccAdminNormal" align="right">Cell Spacing:</td><td align="left"><input type="text" name="formTblCellspacing" style="width: 75px; height: 22px;">
</td>
</tr>
<tr>
<td class="ccAdminNormal" align="right">Outside Border:</td><td align="left"><select name="formTblFrame" style="width: 100px;">
<option value="border" selected>All 4 Sides
<option value="void">None
<option value="above">Top Only
<option value="below">Bottom Only
<option value="lhs">Left Only
<option value="rhs">Right Only
<option value="hsides">Top and Bottom
<option value="vsides">Left and Right
</select>
</td>
</tr>
<tr>
<td class="ccAdminNormal" align="right">Cell Borders:</td><td align="left"><select name="formTblRules" style="width: 100px;">
<option value="all" selected>All
<option value="none">None
<option value="groups">Cell Groups
<option value="rows">Rows Only
<option value="cols">Columns Only
</select>
</td>
</tr>

</TABLE>
</div>

<!-- Button section -->

<TABLE id="buttonTable" border="0" cellpadding="0" cellspacing="0" width="100%" class="ccPanelButtons">
<TR><TD colspan="3" class="ccPanelShadow"><IMG alt="" src="https://s3.amazonaws.com/cdn.contensive.com/assets/20190729/Images/spacer.gif" height="1" width="100%" /></TD></TR><TR><TD width="1" height="1" class="ccPanelShadow"><IMG alt="" src="https://s3.amazonaws.com/cdn.contensive.com/assets/20190729/Images/spacer.gif" height="1" width="1" /></TD><TD width="100%" valign="top" align="left"><TABLE border="0" cellpadding="3" cellspacing="0" width="100%" class="ccPanelButtons"><TR>
<TD valign="top">
<INPUT Type="Button" Value="  Apply  " onclick="getInfoAndUpdate();">
<INPUT Type="Button" Value="  OK  " onclick="getInfoAndUpdate();closeFunction();">
<INPUT Type="Button" Value="  Cancel  " onclick="closeFunction();">
</TD></TR></TABLE>
</TD>
</TR></TABLE>
</TD></TR>
</TABLE>
</body></html>
<script language="JavaScript">
var numRows;
var numCols;
var topAndBottomBarHeight = 50;

function showTab(TabName, tabElement, tabIndex) {

	var i;
	var newIndex;
	var oldIndex;

	var tabLinks = document.getElementsByName("tabLink");

	// this is the way we can control it from outside
	if (tabIndex != -1) {
		tabElement = tabLinks[tabIndex];
	}
	
	for (i = 0; i < tabLinks.length; i++) {
		if (tabLinks[i] != tabElement) {
			tabLinks[i].className = "ccPanel ccTab ccTabHidden";
			//var newSrc = replace(tabImages[i].src, "over", "norm");
			//tabImages[i].src = newSrc.valueOf();
			tabLinks[i].blur();
		}
		else {
			tabLinks[i].className = "ccPanel ccTab";
			//var newSrc = replace(tabImages[i].src, "norm", "over");
			//tabImages[i].src = newSrc.valueOf();
			tabLinks[i].blur();
		}
	}
	var tab = document.all[TabName];
	var tabs = document.getElementsByTagName("DIV");

	// this is the way we can control it from outside
	if (tabIndex != -1) {
		tab = tabs[tabIndex];
	}

	for (i = 0; i < tabs.length; i++) {
		if (tabs[i] != tab) {
			if (tabs[i].style.visibility = "visible") {
				oldIndex = i;
			}
			tabs[i].style.visibility = "hidden";
		}
		else {
			newIndex = i;
			if (tabs[i].style.visibility == "visible") {
				return;
			}
			tabs[i].style.visibility = "visible";
		}
	}
	tabs[newIndex].style.left = getPageOffsetLeft(tabs[oldIndex]);
	tabs[newIndex].style.top = getPageOffsetTop(tabs[oldIndex]);

}

function loadValues() {
	var i;
	var divObj;
	var newTableObj;
	var tableObj;
	var tableRange;

	var currWidth = callerWindowObj.TableCellPropertyObject.getAttribute("width");
	if (currWidth == "") {
		currWidth = callerWindowObj.TableCellPropertyObject.style.width;
	}

	var newWidth1 = replace(currWidth, "%", "");

	if (newWidth1 == currWidth) {
		var sIndex = 0;
	}
	else {
		var sIndex = 1;
	}

	var newWidth2 = replace(newWidth1, "px", "");

	formCellWidth.value = newWidth2;
	formCellWidthDesc.selectedIndex = sIndex;
	formCellWidth.value = newWidth2;

	var currHeight = callerWindowObj.TableCellPropertyObject.getAttribute("height");
	if (currHeight == "") {
		currHeight = callerWindowObj.TableCellPropertyObject.style.height;
	}

	var newHeight1 = replace(currHeight, "%", "");

	if (newHeight1 == currHeight) {
		var sIndex = 0;
	}
	else {
		var sIndex = 1;
	}

	var newHeight2 = replace(newHeight1, "px", "");

	formCellHeight.value = newHeight2;
	formCellHeightDesc.selectedIndex = sIndex;
	formCellHeight.value = newHeight2;

	formBGColor.value = callerWindowObj.TableCellPropertyObject.style.backgroundColor;

	var cVA = callerWindowObj.TableCellPropertyObject.getAttribute("valign");
	var cA = callerWindowObj.TableCellPropertyObject.style.textAlign;

	for (i = 0; i < formCellVertAlign.options.length; i++) {
		if (formCellVertAlign.options[i].value == cVA) {	
			formCellVertAlign.selectedIndex = i;
		}
	}

	for (i = 0; i < formCellAlign.options.length; i++) {
		if (formCellAlign.options[i].value == cA) {	
			formCellAlign.selectedIndex = i;
		}
	}


	var tableCells = callerWindowObj.TablePropertyObject.getElementsByTagName("TD")
	
	numRows = callerWindowObj.TablePropertyObject.rows.length;;
	numCols = tableCells.length/numRows;
	
	formNumRows.value = numRows;
	formNumCols.value = numCols;

	currWidth = callerWindowObj.TablePropertyObject.getAttribute("width");
	if (currWidth == "") {
		currWidth = callerWindowObj.TablePropertyObject.style.width;
	}

	var newWidth1 = replace(currWidth, "%", "");

	if (newWidth1 == currWidth) {
		var sIndex = 0;
	}
	else {
		var sIndex = 1;
	}

	var newWidth2 = replace(newWidth1, "px", "");

	formTblWidth.value = newWidth2;
	formTblWidthDesc.selectedIndex = sIndex;

	var tableAlign = callerWindowObj.TablePropertyObject.getAttribute("align");

	for (i = 0; i < formTblAlign.options.length; i++) {
		if (formTblAlign.options[i].value == tableAlign) {	
			formTblAlign.selectedIndex = i;
		}
	}

	var tableFrame = callerWindowObj.TablePropertyObject.getAttribute("frame");

	for (i = 0; i < formTblFrame.options.length; i++) {
		if (formTblFrame.options[i].value == tableFrame) {	
			formTblFrame.selectedIndex = i;
		}
	}

	var tableRules = callerWindowObj.TablePropertyObject.getAttribute("rules");

	for (i = 0; i < formTblRules.options.length; i++) {
		if (formTblRules.options[i].value == tableRules) {	
			formTblRules.selectedIndex = i;
		}
	}

	formTblBorder.value = callerWindowObj.TablePropertyObject.getAttribute("border");
	formTblBGColor.value = callerWindowObj.TablePropertyObject.style.backgroundColor;
	formTblCellpadding.value = callerWindowObj.TablePropertyObject.getAttribute("cellpadding");
	formTblCellspacing.value = callerWindowObj.TablePropertyObject.getAttribute("cellspacing");

	var bt = document.getElementById("buttonTable");
	bt.style.position="absolute";
	bt.style.top = 308;
	bt.style.left = 0;

	if (callerArgObj.tab != 0) {
		showTab("", null, callerArgObj.tab);
	} else {
		var tabLinks = document.getElementsByName("tabLink");
		for (i = 0; i < tabLinks.length; i++) {
			tabLinks[i].blur();
		}
	}

}

function replace(string,text,by) {
// Replaces text with by in string
    var strLength = string.length, txtLength = text.length;
    if ((strLength == 0) || (txtLength == 0)) return string;

    var i = string.indexOf(text);
    if ((!i) && (text != string.substring(0,txtLength))) return string;
    if (i == -1) return string;

    var newstr = string.substring(0,i) + by;

    if (i+txtLength < strLength)
        newstr += replace(string.substring(i+txtLength,strLength),text,by);

    return newstr;
}
</script>
