<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NLog.AWS.Logger</name>
    </assembly>
    <members>
        <member name="T:NLog.AWS.Logger.AWSTarget">
            <summary>
            An NLog target that can be used with the NLog logging library to send messages to AWS.
            </summary>
        </member>
        <member name="M:NLog.AWS.Logger.AWSTarget.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:NLog.AWS.Logger.AWSTarget.LogGroup">
            <summary>
            Gets and sets the LogGroup property. This is the name of the CloudWatch Logs group where 
            streams will be created and log messages written to.
            </summary>
        </member>
        <member name="P:NLog.AWS.Logger.AWSTarget.Profile">
            <summary>
            Gets and sets the Profile property. The profile is used to look up AWS credentials in the profile store.
            <para>
            For understanding how credentials are determine view the top level documentation for AWSLoggerConfig class.
            </para>
            </summary>
        </member>
        <member name="P:NLog.AWS.Logger.AWSTarget.ProfilesLocation">
            <summary>
            Gets and sets the ProfilesLocation property. If this is not set the default profile store is used by the AWS SDK for .NET 
            to look up credentials. This is most commonly used when you are running an application of on-priemse under a service account.
            <para>
            For understanding how credentials are determine view the top level documentation for AWSLoggerConfig class.
            </para>
            </summary>
        </member>
        <member name="P:NLog.AWS.Logger.AWSTarget.Credentials">
            <summary>
            Gets and sets the Credentials property. These are the AWS credentials used by the AWS SDK for .NET to make service calls.
            <para>
            For understanding how credentials are determine view the top level documentation for AWSLoggerConfig class.
            </para>
            </summary>
        </member>
        <member name="P:NLog.AWS.Logger.AWSTarget.Region">
            <summary>
            Gets and sets the Region property. This is the AWS Region that will be used for CloudWatch Logs. If this is not
            the AWS SDK for .NET will use its fall back logic to try and determine the region through environment variables and EC2 instance metadata.
            If the Region is not set and no region is found by the SDK's fall back logic then an exception will be thrown.
            </summary>
        </member>
        <member name="P:NLog.AWS.Logger.AWSTarget.BatchPushInterval">
            <summary>
            Gets and sets the BatchPushInterval property. For performance the log messages are sent to AWS in batch sizes. BatchPushInterval 
            dictates the frequency of when batches are sent. If either BatchPushInterval or BatchSizeInBytes are exceeded the batch will be sent.
            <para>
            The default is 3 seconds.
            </para>
            </summary>
        </member>
        <member name="P:NLog.AWS.Logger.AWSTarget.BatchSizeInBytes">
            <summary>
            Gets and sets the BatchSizeInBytes property. For performance the log messages are sent to AWS in batch sizes. BatchSizeInBytes 
            dictates the total size of the batch in bytes when batches are sent. If either BatchPushInterval or BatchSizeInBytes are exceeded the batch will be sent.
            <para>
            The default is 100 Kilobytes.
            </para>
            </summary>
        </member>
        <member name="P:NLog.AWS.Logger.AWSTarget.MaxQueuedMessages">
            <summary>
            Gets and sets the MaxQueuedMessages property. This specifies the maximum number of log messages that could be stored in-memory. MaxQueuedMessages 
            dictates the total number of log messages that can be stored in-memory. If this exceeded, incoming log messages will be dropped.
            <para>
            The default is 10000.
            </para>
            </summary>
        </member>
        <member name="P:NLog.AWS.Logger.AWSTarget.LogStreamNameSuffix">
            <summary>
            Gets and sets the LogStreamNameSuffix property. The LogStreamName consists of an optional user-defined prefix segment, then a DateTimeStamp as the
            system-defined prefix segment, and a user defined suffix value that can be set using the LogStreamNameSuffix property defined here.
            <para>
            The default is going to a Guid.
            </para>
            </summary>
        </member>
        <member name="P:NLog.AWS.Logger.AWSTarget.LogStreamNamePrefix">
            <summary>
            Gets and sets the LogStreamNamePrefix property. The LogStreamName consists of an optional user-defined prefix segment (defined here), then a
            DateTimeStamp as the system-defined prefix segment, and a user defined suffix value that can be set using the LogStreamNameSuffix property.
            <para>
            The default will use an empty string for this user-defined portion, meaning the log stream name will start with the system-defined portion of the prefix (yyyy/MM/dd ... )
            </para>
            </summary>
        </member>
        <member name="P:NLog.AWS.Logger.AWSTarget.LibraryLogFileName">
            <summary>
            Gets and sets the LibraryLogFileName property. This is the name of the file into which errors from the AWS.Logger.Core library will be wriiten into.
            <para>
            The default is "aws-logger-errors.txt".
            </para>
            </summary>
        </member>
        <member name="M:NLog.AWS.Logger.AWSTarget.InitializeTarget">
            <inheritdoc/>
        </member>
        <member name="M:NLog.AWS.Logger.AWSTarget.Write(NLog.LogEventInfo)">
            <inheritdoc/>
        </member>
        <member name="M:NLog.AWS.Logger.AWSTarget.FlushAsync(NLog.Common.AsyncContinuation)">
            <inheritdoc/>
        </member>
    </members>
</doc>
